[tool.poetry]
name = "focuz-backend"
version = "0.1.0"
description = "수면과 인지 기능의 상관관계를 지원하는 API 서버"
authors = ["workface <with.you70@gmail.com>"]
readme = "README.md"

packages = [
  { include = "management" },
  { include = "cognitive_statistics" },
  { include = "cognitives" },
  { include = "config" },
  { include = "sleep" },
  { include = "users" },
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
django = ">=5.2.1,<6.0.0"
psycopg2-binary = "^2.9.10"
django-redis = "^5.4.0"
python-dotenv = "^1.1.0"
djangorestframework = "^3.16.0"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^24.0"
ruff = "^0.4.4"
mypy = "^1.10.0"
django-stubs = "^4.2.7"
djangorestframework-stubs = "^3.14.5"
types-redis = "^4.6.0.20241004"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
# Black 프로파일을 따라가도록 설정
profile = "black"
# 한 줄 최대 길이 (black 과 일치)
line_length = 88
# 프로젝트의 first-party 패키지로 인식할 모듈 목록
known_first_party = ["admin", "cognitive_statistics", "cognitives", "config", "sleep", "users"]
# Multi-line output style: 3 = vertical hanging indent
multi_line_output = 3
include_trailing_comma = true

[tool.black]
# 최대 줄 길이 (isort 과 일치)
line-length = 88
# 지원할 Python 버전
target-version = ["py311"]
# 포맷팅할 파일 패턴
include = '\.pyi?$'
# 제외할 디렉터리/파일
exclude = '''
/(
  \.eggs
| \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| build
| dist
)/
'''

[tool.mypy]
# 검사할 Python 버전
python_version = "3.13"
# 엄격 모드
strict = true
# 설치된 패키지의 타입 힌트 누락 오류 무시
ignore_missing_imports = true
# Django-stubs 플러그인 활성화
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.settings.local"
strict_settings = true
